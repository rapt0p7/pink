function initMap(){map=new google.maps.Map(document.getElementById("map-canvas"),{center:{lat:59.936392,lng:30.321109},zoom:17,disableDefaultUI:!0});var e={url:"../img/icon-map-marker.svg",size:new google.maps.Size(36,36),origin:new google.maps.Point(0,0),anchor:new google.maps.Point(18,18)},t=new google.maps.LatLng(59.936392,30.3211094);new google.maps.Marker({position:t,map:map,icon:e})}var hamburger=document.querySelector(".hamburger-menu"),menu=document.querySelector(".menu"),ham_icon=document.querySelector(".hamburger-menu__icon--ham"),cross=document.querySelector(".hamburger-menu__icon--cross"),header=document.querySelector(".page-header");hamburger.addEventListener("click",function(e){e.preventDefault(),menu.classList.contains("menu--open")?(menu.classList.remove("menu--open"),ham_icon.classList.remove("hamburger-menu__icon--hidden"),header.classList.remove("page-header--toggled"),cross.classList.add("hamburger-menu__icon--hidden")):(menu.classList.add("menu--open"),cross.classList.remove("hamburger-menu__icon--hidden"),ham_icon.classList.add("hamburger-menu__icon--hidden"),header.classList.add("page-header--toggled"))});var map;!function(){"use strict";if(window&&window.addEventListener){var e,t,n=Object.create(null),o=function(){clearTimeout(t),t=setTimeout(e,100)},i=function(){},r=function(){var e;window.addEventListener("resize",o,!1),window.addEventListener("orientationchange",o,!1),window.MutationObserver?(e=new MutationObserver(o),e.observe(document.documentElement,{childList:!0,subtree:!0,attributes:!0}),i=function(){try{e.disconnect(),window.removeEventListener("resize",o,!1),window.removeEventListener("orientationchange",o,!1)}catch(e){}}):(document.documentElement.addEventListener("DOMSubtreeModified",o,!1),i=function(){document.documentElement.removeEventListener("DOMSubtreeModified",o,!1),window.removeEventListener("resize",o,!1),window.removeEventListener("orientationchange",o,!1)})},a=function(e){function t(e){var t;return void 0!==e.protocol?t=e:(t=document.createElement("a"),t.href=e),t.protocol.replace(/:/g,"")+t.host}var n,o,i;return window.XMLHttpRequest&&(n=new XMLHttpRequest,o=t(location),i=t(e),n=void 0===n.withCredentials&&""!==i&&i!==o?XDomainRequest||void 0:XMLHttpRequest),n},s="http://www.w3.org/1999/xlink";e=function(){function e(){L-=1,0===L&&(i(),r())}function t(e){return function(){n[e.base]!==!0&&(e.isXlink?e.useEl.setAttributeNS(s,"xlink:href","#"+e.hash):e.useEl.setAttribute("href","#"+e.hash))}}function o(t){return function(){var n,o=document.body,i=document.createElement("x");t.onload=null,i.innerHTML=t.responseText,n=i.getElementsByTagName("svg")[0],n&&(n.setAttribute("aria-hidden","true"),n.style.position="absolute",n.style.width=0,n.style.height=0,n.style.overflow="hidden",o.insertBefore(n,o.firstChild)),e()}}function u(t){return function(){t.onerror=null,t.ontimeout=null,e()}}var d,c,m,l,h,g,v,w,p,f,b="",L=0,E=!1;for(i(),p=document.getElementsByTagName("use"),h=0;h<p.length;h+=1){try{c=p[h].getBoundingClientRect()}catch(e){c=!1}l=p[h].getAttribute("href"),l?E=!1:(l=p[h].getAttributeNS(s,"href"),E=!0),w=l&&l.split?l.split("#"):["",""],d=w[0],m=w[1],g=c&&0===c.left&&0===c.right&&0===c.top&&0===c.bottom,c&&0===c.width&&0===c.height&&!g?(b&&!d.length&&m&&!document.getElementById(m)&&(d=b),d.length&&(f=n[d],f!==!0&&setTimeout(t({useEl:p[h],base:d,hash:m,isXlink:E}),0),void 0===f&&(v=a(d),void 0!==v&&(f=new v,n[d]=f,f.onload=o(f),f.onerror=u(f),f.ontimeout=u(f),f.open("GET",d),f.send(),L+=1)))):g?d.length&&n[d]&&setTimeout(t({useEl:p[h],base:d,hash:m,isXlink:E}),0):void 0===n[d]?n[d]=!0:n[d].onload&&(n[d].abort(),delete n[d].onload,n[d]=!0)}p="",L+=1,e()},window.addEventListener("load",function n(){window.removeEventListener("load",n,!1),t=setTimeout(e,0)},!1)}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
