function initMap(){map=new google.maps.Map(document.getElementById("map-canvas"),{center:{lat:59.936392,lng:30.321109},zoom:17,disableDefaultUI:!0});var e={url:"./img/icon-map-marker.svg",size:new google.maps.Size(36,36),origin:new google.maps.Point(0,0),anchor:new google.maps.Point(18,18)},t=new google.maps.LatLng(59.936392,30.3211094);new google.maps.Marker({position:t,map:map,icon:e})}var hamburger=document.querySelector(".hamburger-menu"),menu=document.querySelector(".menu"),ham_icon=document.querySelector(".hamburger-menu__icon--ham"),cross=document.querySelector(".hamburger-menu__icon--cross"),header=document.querySelector(".page-header");hamburger.addEventListener("click",function(e){e.preventDefault(),menu.classList.contains("menu--open")?(menu.classList.remove("menu--open"),ham_icon.classList.remove("hamburger-menu__icon--hidden"),header.classList.remove("page-header--toggled"),cross.classList.add("hamburger-menu__icon--hidden")):(menu.classList.add("menu--open"),cross.classList.remove("hamburger-menu__icon--hidden"),ham_icon.classList.add("hamburger-menu__icon--hidden"),header.classList.add("page-header--toggled"))});var map;!function(){"use strict";if(window&&window.addEventListener){var e,t,n=Object.create(null),o=function(){clearTimeout(t),t=setTimeout(e,100)},i=function(){},r=function(){var e;window.addEventListener("resize",o,!1),window.addEventListener("orientationchange",o,!1),window.MutationObserver?(e=new MutationObserver(o),e.observe(document.documentElement,{childList:!0,subtree:!0,attributes:!0}),i=function(){try{e.disconnect(),window.removeEventListener("resize",o,!1),window.removeEventListener("orientationchange",o,!1)}catch(e){}}):(document.documentElement.addEventListener("DOMSubtreeModified",o,!1),i=function(){document.documentElement.removeEventListener("DOMSubtreeModified",o,!1),window.removeEventListener("resize",o,!1),window.removeEventListener("orientationchange",o,!1)})},a=function(e){function t(e){var t;return void 0!==e.protocol?t=e:(t=document.createElement("a"),t.href=e),t.protocol.replace(/:/g,"")+t.host}var n,o,i;return window.XMLHttpRequest&&(n=new XMLHttpRequest,o=t(location),i=t(e),n=void 0===n.withCredentials&&""!==i&&i!==o?XDomainRequest||void 0:XMLHttpRequest),n},s="http://www.w3.org/1999/xlink";e=function(){function e(){L-=1,0===L&&(i(),r())}function t(e){return function(){n[e.base]!==!0&&(e.isXlink?e.useEl.setAttributeNS(s,"xlink:href","#"+e.hash):e.useEl.setAttribute("href","#"+e.hash))}}function o(t){return function(){var n,o=document.body,i=document.createElement("x");t.onload=null,i.innerHTML=t.responseText,n=i.getElementsByTagName("svg")[0],n&&(n.setAttribute("aria-hidden","true"),n.style.position="absolute",n.style.width=0,n.style.height=0,n.style.overflow="hidden",o.insertBefore(n,o.firstChild)),e()}}function u(t){return function(){t.onerror=null,t.ontimeout=null,e()}}var d,c,m,l,h,g,v,w,p,f,b="",L=0,E=!1;for(i(),p=document.getElementsByTagName("use"),h=0;h<p.length;h+=1){try{c=p[h].getBoundingClientRect()}catch(e){c=!1}l=p[h].getAttribute("href"),l?E=!1:(l=p[h].getAttributeNS(s,"href"),E=!0),w=l&&l.split?l.split("#"):["",""],d=w[0],m=w[1],g=c&&0===c.left&&0===c.right&&0===c.top&&0===c.bottom,c&&0===c.width&&0===c.height&&!g?(b&&!d.length&&m&&!document.getElementById(m)&&(d=b),d.length&&(f=n[d],f!==!0&&setTimeout(t({useEl:p[h],base:d,hash:m,isXlink:E}),0),void 0===f&&(v=a(d),void 0!==v&&(f=new v,n[d]=f,f.onload=o(f),f.onerror=u(f),f.ontimeout=u(f),f.open("GET",d),f.send(),L+=1)))):g?d.length&&n[d]&&setTimeout(t({useEl:p[h],base:d,hash:m,isXlink:E}),0):void 0===n[d]?n[d]=!0:n[d].onload&&(n[d].abort(),delete n[d].onload,n[d]=!0)}p="",L+=1,e()},window.addEventListener("load",function n(){window.removeEventListener("load",n,!1),t=setTimeout(e,0)},!1)}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5taW4uanMiXSwibmFtZXMiOlsiaW5pdE1hcCIsIm1hcCIsImdvb2dsZSIsIm1hcHMiLCJNYXAiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiY2VudGVyIiwibGF0IiwibG5nIiwiem9vbSIsImRpc2FibGVEZWZhdWx0VUkiLCJpbWFnZSIsInVybCIsInNpemUiLCJTaXplIiwib3JpZ2luIiwiUG9pbnQiLCJhbmNob3IiLCJteUxhdExuZyIsIkxhdExuZyIsIk1hcmtlciIsInBvc2l0aW9uIiwiaWNvbiIsImhhbWJ1cmdlciIsInF1ZXJ5U2VsZWN0b3IiLCJtZW51IiwiaGFtX2ljb24iLCJjcm9zcyIsImhlYWRlciIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJyZW1vdmUiLCJhZGQiLCJ3aW5kb3ciLCJjaGVja1VzZUVsZW1zIiwidGlkIiwiY2FjaGUiLCJPYmplY3QiLCJjcmVhdGUiLCJkZWJvdW5jZWRDaGVjayIsImNsZWFyVGltZW91dCIsInNldFRpbWVvdXQiLCJ1bm9ic2VydmVDaGFuZ2VzIiwib2JzZXJ2ZUNoYW5nZXMiLCJvYnNlcnZlciIsIk11dGF0aW9uT2JzZXJ2ZXIiLCJvYnNlcnZlIiwiZG9jdW1lbnRFbGVtZW50IiwiY2hpbGRMaXN0Iiwic3VidHJlZSIsImF0dHJpYnV0ZXMiLCJkaXNjb25uZWN0IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImlnbm9yZSIsImNyZWF0ZVJlcXVlc3QiLCJnZXRPcmlnaW4iLCJsb2MiLCJhIiwidW5kZWZpbmVkIiwicHJvdG9jb2wiLCJjcmVhdGVFbGVtZW50IiwiaHJlZiIsInJlcGxhY2UiLCJob3N0IiwiUmVxdWVzdCIsIm9yaWdpbjIiLCJYTUxIdHRwUmVxdWVzdCIsImxvY2F0aW9uIiwid2l0aENyZWRlbnRpYWxzIiwiWERvbWFpblJlcXVlc3QiLCJ4bGlua05TIiwib2JzZXJ2ZUlmRG9uZSIsImluUHJvZ3Jlc3NDb3VudCIsImF0dHJVcGRhdGVGdW5jIiwic3BlYyIsImJhc2UiLCJpc1hsaW5rIiwidXNlRWwiLCJzZXRBdHRyaWJ1dGVOUyIsImhhc2giLCJzZXRBdHRyaWJ1dGUiLCJvbmxvYWRGdW5jIiwieGhyIiwic3ZnIiwiYm9keSIsIngiLCJvbmxvYWQiLCJpbm5lckhUTUwiLCJyZXNwb25zZVRleHQiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInN0eWxlIiwid2lkdGgiLCJoZWlnaHQiLCJvdmVyZmxvdyIsImluc2VydEJlZm9yZSIsImZpcnN0Q2hpbGQiLCJvbkVycm9yVGltZW91dCIsIm9uZXJyb3IiLCJvbnRpbWVvdXQiLCJiY3IiLCJpIiwiaXNIaWRkZW4iLCJ1c2VzIiwiZmFsbGJhY2siLCJsZW5ndGgiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJnZXRBdHRyaWJ1dGUiLCJnZXRBdHRyaWJ1dGVOUyIsInNwbGl0IiwibGVmdCIsInJpZ2h0IiwidG9wIiwiYm90dG9tIiwib3BlbiIsInNlbmQiLCJhYm9ydCIsIndpbkxvYWQiXSwibWFwcGluZ3MiOiJBQXNCQSxRQUFTQSxXQUNSQyxJQUFNLEdBQUlDLFFBQU9DLEtBQUtDLElBQUlDLFNBQVNDLGVBQWUsZUFDakRDLFFBQVNDLElBQUssVUFBV0MsSUFBTSxXQUMvQkMsS0FBTSxHQUNOQyxrQkFBa0IsR0FHakIsSUFBSUMsSUFDSEMsSUFBSyw0QkFDREMsS0FBTSxHQUFJWixRQUFPQyxLQUFLWSxLQUFLLEdBQUksSUFDL0JDLE9BQVEsR0FBSWQsUUFBT0MsS0FBS2MsTUFBTSxFQUFFLEdBQ2hDQyxPQUFRLEdBQUloQixRQUFPQyxLQUFLYyxNQUFNLEdBQUksS0FDckNFLEVBQVcsR0FBSWpCLFFBQU9DLEtBQUtpQixPQUFPLFVBQVUsV0FDbkMsSUFBSWxCLFFBQU9DLEtBQUtrQixRQUM1QkMsU0FBVUgsRUFDVmxCLElBQUtBLElBQ0xzQixLQUFNWCxJQXRDUixHQUFJWSxXQUFZbkIsU0FBU29CLGNBQWMsbUJBQ25DQyxLQUFPckIsU0FBU29C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QSxFQUNOSSxLQUFNQSxFQUNOSCxRQUFTQSxJQUNOLEdBRU9sQixTQUFSd0IsSUFDSGxCLEVBQVVWLEVBQWNxQixHQUNSakIsU0FBWk0sSUFDSGtCLEVBQU0sR0FBSWxCLEdBQ1Y1QixFQUFNdUMsR0FBUU8sRUFDZEEsRUFBSUksT0FBU0wsRUFBV0MsR0FDeEJBLEVBQUllLFFBQVVELEVBQWVkLEdBQzdCQSxFQUFJZ0IsVUFBWUYsRUFBZWQsR0FDL0JBLEVBQUkrQixLQUFLLE1BQU90QyxHQUNoQk8sRUFBSWdDLE9BQ0oxQyxHQUFtQixNQUtqQjZCLEVBV00xQixFQUFLNkIsUUFBVXBFLEVBQU11QyxJQUMvQmxDLFdBQVdnQyxHQUNWSSxNQUFPeUIsRUFBS0YsR0FDWnpCLEtBQU1BLEVBQ05JLEtBQU1BLEVBQ05ILFFBQVNBLElBQ04sR0FoQmdCbEIsU0FBaEJ0QixFQUFNdUMsR0FFVHZDLEVBQU11QyxJQUFRLEVBQ0p2QyxFQUFNdUMsR0FBTVcsU0FHdEJsRCxFQUFNdUMsR0FBTXdDLGNBQ0wvRSxHQUFNdUMsR0FBTVcsT0FDbkJsRCxFQUFNdUMsSUFBUSxHQVlsQjJCLEVBQU8sR0FDUDlCLEdBQW1CLEVBQ25CRCxLQUdEdEMsT0FBT1AsaUJBQWlCLE9BQVEsUUFBUzBGLEtBQ3hDbkYsT0FBT21CLG9CQUFvQixPQUFRZ0UsR0FBUyxHQUM1Q2pGLEVBQU1NLFdBQVdQLEVBQWUsS0FDOUIiLCJmaWxlIjoic2NyaXB0Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBoYW1idXJnZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmhhbWJ1cmdlci1tZW51XCIpO1xudmFyIG1lbnUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1lbnVcIik7XG52YXIgaGFtX2ljb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmhhbWJ1cmdlci1tZW51X19pY29uLS1oYW1cIik7XG52YXIgY3Jvc3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmhhbWJ1cmdlci1tZW51X19pY29uLS1jcm9zc1wiKTtcbnZhciBoZWFkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBhZ2UtaGVhZGVyXCIpO1xuXG5oYW1idXJnZXIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKGV2ZW50KSB7XG5cdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdGlmIChtZW51LmNsYXNzTGlzdC5jb250YWlucyhcIm1lbnUtLW9wZW5cIikpIHtcblx0XHRtZW51LmNsYXNzTGlzdC5yZW1vdmUoXCJtZW51LS1vcGVuXCIpO1xuXHRcdGhhbV9pY29uLmNsYXNzTGlzdC5yZW1vdmUoXCJoYW1idXJnZXItbWVudV9faWNvbi0taGlkZGVuXCIpO1xuXHRcdGhlYWRlci5jbGFzc0xpc3QucmVtb3ZlKFwicGFnZS1oZWFkZXItLXRvZ2dsZWRcIik7XG5cdFx0Y3Jvc3MuY2xhc3NMaXN0LmFkZChcImhhbWJ1cmdlci1tZW51X19pY29uLS1oaWRkZW5cIik7XG5cdFx0fSBlbHNlIHtcblx0XHRcdG1lbnUuY2xhc3NMaXN0LmFkZChcIm1lbnUtLW9wZW5cIik7XG5cdFx0XHRjcm9zcy5jbGFzc0xpc3QucmVtb3ZlKFwiaGFtYnVyZ2VyLW1lbnVfX2ljb24tLWhpZGRlblwiKTtcblx0XHRcdGhhbV9pY29uLmNsYXNzTGlzdC5hZGQoXCJoYW1idXJnZXItbWVudV9faWNvbi0taGlkZGVuXCIpO1xuXHRcdFx0aGVhZGVyLmNsYXNzTGlzdC5hZGQoXCJwYWdlLWhlYWRlci0tdG9nZ2xlZFwiKTtcblx0XHR9XG59KTtcblxudmFyIG1hcDtcbmZ1bmN0aW9uIGluaXRNYXAoKSB7XG5cdG1hcCA9IG5ldyBnb29nbGUubWFwcy5NYXAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21hcC1jYW52YXMnKSwge1xuXHRcdGNlbnRlcjoge2xhdDogNTkuOTM2MzkyLCBsbmc6ICAzMC4zMjExMDl9LFxuXHRcdHpvb206IDE3LFxuXHRcdGRpc2FibGVEZWZhdWx0VUk6IHRydWVcblx0fSk7XG5cbiAgXHR2YXIgaW1hZ2UgPSB7XG4gIFx0XHR1cmw6ICcuL2ltZy9pY29uLW1hcC1tYXJrZXIuc3ZnJyxcbiAgICAgICAgc2l6ZTogbmV3IGdvb2dsZS5tYXBzLlNpemUoMzYsIDM2KSxcbiAgICAgICAgb3JpZ2luOiBuZXcgZ29vZ2xlLm1hcHMuUG9pbnQoMCwwKSxcbiAgICAgICAgYW5jaG9yOiBuZXcgZ29vZ2xlLm1hcHMuUG9pbnQoMTgsIDE4KX07XG5cdHZhciBteUxhdExuZyA9IG5ldyBnb29nbGUubWFwcy5MYXRMbmcoNTkuOTM2MzkyLDMwLjMyMTEwOTQpO1xuXHR2YXIgbWFya2VyID0gbmV3IGdvb2dsZS5tYXBzLk1hcmtlcih7XG5cdFx0cG9zaXRpb246IG15TGF0TG5nLFxuXHRcdG1hcDogbWFwLFxuXHRcdGljb246IGltYWdlXG5cdH0pO1xufVxuXG4vKiFcbiAqIEBjb3B5cmlnaHQgQ29weXJpZ2h0IChjKSAyMDE3IEljb01vb24uaW9cbiAqIEBsaWNlbnNlICAgTGljZW5zZWQgdW5kZXIgTUlUIGxpY2Vuc2VcbiAqICAgICAgICAgICAgU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9LZXlhbW9vbi9zdmd4dXNlXG4gKiBAdmVyc2lvbiAgIDEuMi4yXG4gKi9cbi8qanNsaW50IGJyb3dzZXI6IHRydWUgKi9cbi8qZ2xvYmFsIFhEb21haW5SZXF1ZXN0LCBNdXRhdGlvbk9ic2VydmVyLCB3aW5kb3cgKi9cbihmdW5jdGlvbiAoKSB7XG5cdFwidXNlIHN0cmljdFwiO1xuXHRpZiAod2luZG93ICYmIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKSB7XG5cdFx0dmFyIGNhY2hlID0gT2JqZWN0LmNyZWF0ZShudWxsKTsgLy8gaG9sZHMgeGhyIG9iamVjdHMgdG8gcHJldmVudCBtdWx0aXBsZSByZXF1ZXN0c1xuXHRcdHZhciBjaGVja1VzZUVsZW1zO1xuXHRcdHZhciB0aWQ7IC8vIHRpbWVvdXQgaWRcblx0XHR2YXIgZGVib3VuY2VkQ2hlY2sgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRjbGVhclRpbWVvdXQodGlkKTtcblx0XHRcdHRpZCA9IHNldFRpbWVvdXQoY2hlY2tVc2VFbGVtcywgMTAwKTtcblx0XHR9O1xuXHRcdHZhciB1bm9ic2VydmVDaGFuZ2VzID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH07XG5cdFx0dmFyIG9ic2VydmVDaGFuZ2VzID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0dmFyIG9ic2VydmVyO1xuXHRcdFx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgZGVib3VuY2VkQ2hlY2ssIGZhbHNlKTtcblx0XHRcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwib3JpZW50YXRpb25jaGFuZ2VcIiwgZGVib3VuY2VkQ2hlY2ssIGZhbHNlKTtcblx0XHRcdGlmICh3aW5kb3cuTXV0YXRpb25PYnNlcnZlcikge1xuXHRcdFx0XHRvYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKGRlYm91bmNlZENoZWNrKTtcblx0XHRcdFx0b2JzZXJ2ZXIub2JzZXJ2ZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsIHtcblx0XHRcdFx0XHRjaGlsZExpc3Q6IHRydWUsXG5cdFx0XHRcdFx0c3VidHJlZTogdHJ1ZSxcblx0XHRcdFx0XHRhdHRyaWJ1dGVzOiB0cnVlXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHR1bm9ic2VydmVDaGFuZ2VzID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRvYnNlcnZlci5kaXNjb25uZWN0KCk7XG5cdFx0XHRcdFx0XHR3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCBkZWJvdW5jZWRDaGVjaywgZmFsc2UpO1xuXHRcdFx0XHRcdFx0d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJvcmllbnRhdGlvbmNoYW5nZVwiLCBkZWJvdW5jZWRDaGVjaywgZmFsc2UpO1xuXHRcdFx0XHRcdH0gY2F0Y2ggKGlnbm9yZSkge31cblx0XHRcdFx0fTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NU3VidHJlZU1vZGlmaWVkXCIsIGRlYm91bmNlZENoZWNrLCBmYWxzZSk7XG5cdFx0XHRcdHVub2JzZXJ2ZUNoYW5nZXMgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJET01TdWJ0cmVlTW9kaWZpZWRcIiwgZGVib3VuY2VkQ2hlY2ssIGZhbHNlKTtcblx0XHRcdFx0XHR3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCBkZWJvdW5jZWRDaGVjaywgZmFsc2UpO1xuXHRcdFx0XHRcdHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwib3JpZW50YXRpb25jaGFuZ2VcIiwgZGVib3VuY2VkQ2hlY2ssIGZhbHNlKTtcblx0XHRcdFx0fTtcblx0XHRcdH1cblx0XHR9O1xuXHRcdHZhciBjcmVhdGVSZXF1ZXN0ID0gZnVuY3Rpb24gKHVybCkge1xuXHRcdFx0Ly8gSW4gSUUgOSwgY3Jvc3Mgb3JpZ2luIHJlcXVlc3RzIGNhbiBvbmx5IGJlIHNlbnQgdXNpbmcgWERvbWFpblJlcXVlc3QuXG5cdFx0XHQvLyBYRG9tYWluUmVxdWVzdCB3b3VsZCBmYWlsIGlmIENPUlMgaGVhZGVycyBhcmUgbm90IHNldC5cblx0XHRcdC8vIFRoZXJlZm9yZSwgWERvbWFpblJlcXVlc3Qgc2hvdWxkIG9ubHkgYmUgdXNlZCB3aXRoIGNyb3NzIG9yaWdpbiByZXF1ZXN0cy5cblx0XHRcdGZ1bmN0aW9uIGdldE9yaWdpbihsb2MpIHtcblx0XHRcdFx0dmFyIGE7XG5cdFx0XHRcdGlmIChsb2MucHJvdG9jb2wgIT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRcdGEgPSBsb2M7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0YSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO1xuXHRcdFx0XHRcdGEuaHJlZiA9IGxvYztcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gYS5wcm90b2NvbC5yZXBsYWNlKC86L2csIFwiXCIpICsgYS5ob3N0O1xuXHRcdFx0fVxuXHRcdFx0dmFyIFJlcXVlc3Q7XG5cdFx0XHR2YXIgb3JpZ2luO1xuXHRcdFx0dmFyIG9yaWdpbjI7XG5cdFx0XHRpZiAod2luZG93LlhNTEh0dHBSZXF1ZXN0KSB7XG5cdFx0XHRcdFJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcblx0XHRcdFx0b3JpZ2luID0gZ2V0T3JpZ2luKGxvY2F0aW9uKTtcblx0XHRcdFx0b3JpZ2luMiA9IGdldE9yaWdpbih1cmwpO1xuXHRcdFx0XHRpZiAoUmVxdWVzdC53aXRoQ3JlZGVudGlhbHMgPT09IHVuZGVmaW5lZCAmJiBvcmlnaW4yICE9PSBcIlwiICYmIG9yaWdpbjIgIT09IG9yaWdpbikge1xuXHRcdFx0XHRcdFJlcXVlc3QgPSBYRG9tYWluUmVxdWVzdCB8fCB1bmRlZmluZWQ7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0UmVxdWVzdCA9IFhNTEh0dHBSZXF1ZXN0O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gUmVxdWVzdDtcblx0XHR9O1xuXHRcdHZhciB4bGlua05TID0gXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCI7XG5cdFx0Y2hlY2tVc2VFbGVtcyA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHZhciBiYXNlO1xuXHRcdFx0dmFyIGJjcjtcblx0XHRcdHZhciBmYWxsYmFjayA9IFwiXCI7IC8vIG9wdGlvbmFsIGZhbGxiYWNrIFVSTCBpbiBjYXNlIG5vIGJhc2UgcGF0aCB0byBTVkcgZmlsZSB3YXMgZ2l2ZW4gYW5kIG5vIHN5bWJvbCBkZWZpbml0aW9uIHdhcyBmb3VuZC5cblx0XHRcdHZhciBoYXNoO1xuXHRcdFx0dmFyIGhyZWY7XG5cdFx0XHR2YXIgaTtcblx0XHRcdHZhciBpblByb2dyZXNzQ291bnQgPSAwO1xuXHRcdFx0dmFyIGlzSGlkZGVuO1xuXHRcdFx0dmFyIGlzWGxpbmsgPSBmYWxzZTtcblx0XHRcdHZhciBSZXF1ZXN0O1xuXHRcdFx0dmFyIHVybDtcblx0XHRcdHZhciB1c2VzO1xuXHRcdFx0dmFyIHhocjtcblx0XHRcdGZ1bmN0aW9uIG9ic2VydmVJZkRvbmUoKSB7XG5cdFx0XHRcdC8vIElmIGRvbmUgd2l0aCBtYWtpbmcgY2hhbmdlcywgc3RhcnQgd2F0Y2hpbmcgZm9yIGNoYWduZXMgaW4gRE9NIGFnYWluXG5cdFx0XHRcdGluUHJvZ3Jlc3NDb3VudCAtPSAxO1xuXHRcdFx0XHRpZiAoaW5Qcm9ncmVzc0NvdW50ID09PSAwKSB7IC8vIGlmIGFsbCB4aHJzIHdlcmUgcmVzb2x2ZWRcblx0XHRcdFx0XHR1bm9ic2VydmVDaGFuZ2VzKCk7IC8vIG1ha2Ugc3VyZSB0byByZW1vdmUgb2xkIGhhbmRsZXJzXG5cdFx0XHRcdFx0b2JzZXJ2ZUNoYW5nZXMoKTsgLy8gd2F0Y2ggZm9yIGNoYW5nZXMgdG8gRE9NXG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGZ1bmN0aW9uIGF0dHJVcGRhdGVGdW5jKHNwZWMpIHtcblx0XHRcdFx0cmV0dXJuIGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRpZiAoY2FjaGVbc3BlYy5iYXNlXSAhPT0gdHJ1ZSkge1xuXHRcdFx0XHRcdFx0aWYgKHNwZWMuaXNYbGluaykge1xuXHRcdFx0XHRcdFx0XHRzcGVjLnVzZUVsLnNldEF0dHJpYnV0ZU5TKHhsaW5rTlMsIFwieGxpbms6aHJlZlwiLCBcIiNcIiArIHNwZWMuaGFzaCk7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRzcGVjLnVzZUVsLnNldEF0dHJpYnV0ZShcImhyZWZcIiwgXCIjXCIgKyBzcGVjLmhhc2gpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fTtcblx0XHRcdH1cblx0XHRcdGZ1bmN0aW9uIG9ubG9hZEZ1bmMoeGhyKSB7XG5cdFx0XHRcdHJldHVybiBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0dmFyIGJvZHkgPSBkb2N1bWVudC5ib2R5O1xuXHRcdFx0XHRcdHZhciB4ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInhcIik7XG5cdFx0XHRcdFx0dmFyIHN2Zztcblx0XHRcdFx0XHR4aHIub25sb2FkID0gbnVsbDtcblx0XHRcdFx0XHR4LmlubmVySFRNTCA9IHhoci5yZXNwb25zZVRleHQ7XG5cdFx0XHRcdFx0c3ZnID0geC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInN2Z1wiKVswXTtcblx0XHRcdFx0XHRpZiAoc3ZnKSB7XG5cdFx0XHRcdFx0XHRzdmcuc2V0QXR0cmlidXRlKFwiYXJpYS1oaWRkZW5cIiwgXCJ0cnVlXCIpO1xuXHRcdFx0XHRcdFx0c3ZnLnN0eWxlLnBvc2l0aW9uID0gXCJhYnNvbHV0ZVwiO1xuXHRcdFx0XHRcdFx0c3ZnLnN0eWxlLndpZHRoID0gMDtcblx0XHRcdFx0XHRcdHN2Zy5zdHlsZS5oZWlnaHQgPSAwO1xuXHRcdFx0XHRcdFx0c3ZnLnN0eWxlLm92ZXJmbG93ID0gXCJoaWRkZW5cIjtcblx0XHRcdFx0XHRcdGJvZHkuaW5zZXJ0QmVmb3JlKHN2ZywgYm9keS5maXJzdENoaWxkKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0b2JzZXJ2ZUlmRG9uZSgpO1xuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdFx0ZnVuY3Rpb24gb25FcnJvclRpbWVvdXQoeGhyKSB7XG5cdFx0XHRcdHJldHVybiBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0eGhyLm9uZXJyb3IgPSBudWxsO1xuXHRcdFx0XHRcdHhoci5vbnRpbWVvdXQgPSBudWxsO1xuXHRcdFx0XHRcdG9ic2VydmVJZkRvbmUoKTtcblx0XHRcdFx0fTtcblx0XHRcdH1cblx0XHRcdHVub2JzZXJ2ZUNoYW5nZXMoKTsgLy8gc3RvcCB3YXRjaGluZyBmb3IgY2hhbmdlcyB0byBET01cblx0XHRcdC8vIGZpbmQgYWxsIHVzZSBlbGVtZW50c1xuXHRcdFx0dXNlcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwidXNlXCIpO1xuXHRcdFx0Zm9yIChpID0gMDsgaSA8IHVzZXMubGVuZ3RoOyBpICs9IDEpIHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRiY3IgPSB1c2VzW2ldLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXHRcdFx0XHR9IGNhdGNoIChpZ25vcmUpIHtcblx0XHRcdFx0XHQvLyBmYWlsZWQgdG8gZ2V0IGJvdW5kaW5nIHJlY3RhbmdsZSBvZiB0aGUgdXNlIGVsZW1lbnRcblx0XHRcdFx0XHRiY3IgPSBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0XHRocmVmID0gdXNlc1tpXS5nZXRBdHRyaWJ1dGUoXCJocmVmXCIpO1xuXHRcdFx0XHRpZiAoIWhyZWYpIHtcblx0XHRcdFx0XHRocmVmID0gdXNlc1tpXS5nZXRBdHRyaWJ1dGVOUyh4bGlua05TLCBcImhyZWZcIik7XG5cdFx0XHRcdFx0aXNYbGluayA9IHRydWU7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0aXNYbGluayA9IGZhbHNlO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChocmVmICYmIGhyZWYuc3BsaXQpIHtcblx0XHRcdFx0XHR1cmwgPSBocmVmLnNwbGl0KFwiI1wiKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR1cmwgPSBbXCJcIiwgXCJcIl07XG5cdFx0XHRcdH1cblx0XHRcdFx0YmFzZSA9IHVybFswXTtcblx0XHRcdFx0aGFzaCA9IHVybFsxXTtcblx0XHRcdFx0aXNIaWRkZW4gPSBiY3IgJiYgYmNyLmxlZnQgPT09IDAgJiYgYmNyLnJpZ2h0ID09PSAwICYmIGJjci50b3AgPT09IDAgJiYgYmNyLmJvdHRvbSA9PT0gMDtcblx0XHRcdFx0aWYgKGJjciAmJiBiY3Iud2lkdGggPT09IDAgJiYgYmNyLmhlaWdodCA9PT0gMCAmJiAhaXNIaWRkZW4pIHtcblx0XHRcdFx0XHQvLyB0aGUgdXNlIGVsZW1lbnQgaXMgZW1wdHlcblx0XHRcdFx0XHQvLyBpZiB0aGVyZSBpcyBhIHJlZmVyZW5jZSB0byBhbiBleHRlcm5hbCBTVkcsIHRyeSB0byBmZXRjaCBpdFxuXHRcdFx0XHRcdC8vIHVzZSB0aGUgb3B0aW9uYWwgZmFsbGJhY2sgVVJMIGlmIHRoZXJlIGlzIG5vIHJlZmVyZW5jZSB0byBhbiBleHRlcm5hbCBTVkdcblx0XHRcdFx0XHRpZiAoZmFsbGJhY2sgJiYgIWJhc2UubGVuZ3RoICYmIGhhc2ggJiYgIWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGhhc2gpKSB7XG5cdFx0XHRcdFx0XHRiYXNlID0gZmFsbGJhY2s7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmIChiYXNlLmxlbmd0aCkge1xuXHRcdFx0XHRcdFx0Ly8gc2NoZWR1bGUgdXBkYXRpbmcgeGxpbms6aHJlZlxuXHRcdFx0XHRcdFx0eGhyID0gY2FjaGVbYmFzZV07XG5cdFx0XHRcdFx0XHRpZiAoeGhyICE9PSB0cnVlKSB7XG5cdFx0XHRcdFx0XHRcdC8vIHRydWUgc2lnbmlmaWVzIHRoYXQgcHJlcGVuZGluZyB0aGUgU1ZHIHdhcyBub3QgcmVxdWlyZWRcblx0XHRcdFx0XHRcdFx0c2V0VGltZW91dChhdHRyVXBkYXRlRnVuYyh7XG5cdFx0XHRcdFx0XHRcdFx0dXNlRWw6IHVzZXNbaV0sXG5cdFx0XHRcdFx0XHRcdFx0YmFzZTogYmFzZSxcblx0XHRcdFx0XHRcdFx0XHRoYXNoOiBoYXNoLFxuXHRcdFx0XHRcdFx0XHRcdGlzWGxpbms6IGlzWGxpbmtcblx0XHRcdFx0XHRcdFx0fSksIDApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0aWYgKHhociA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0XHRcdFJlcXVlc3QgPSBjcmVhdGVSZXF1ZXN0KGJhc2UpO1xuXHRcdFx0XHRcdFx0XHRpZiAoUmVxdWVzdCAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0XHRcdFx0eGhyID0gbmV3IFJlcXVlc3QoKTtcblx0XHRcdFx0XHRcdFx0XHRjYWNoZVtiYXNlXSA9IHhocjtcblx0XHRcdFx0XHRcdFx0XHR4aHIub25sb2FkID0gb25sb2FkRnVuYyh4aHIpO1xuXHRcdFx0XHRcdFx0XHRcdHhoci5vbmVycm9yID0gb25FcnJvclRpbWVvdXQoeGhyKTtcblx0XHRcdFx0XHRcdFx0XHR4aHIub250aW1lb3V0ID0gb25FcnJvclRpbWVvdXQoeGhyKTtcblx0XHRcdFx0XHRcdFx0XHR4aHIub3BlbihcIkdFVFwiLCBiYXNlKTtcblx0XHRcdFx0XHRcdFx0XHR4aHIuc2VuZCgpO1xuXHRcdFx0XHRcdFx0XHRcdGluUHJvZ3Jlc3NDb3VudCArPSAxO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGlmICghaXNIaWRkZW4pIHtcblx0XHRcdFx0XHRcdGlmIChjYWNoZVtiYXNlXSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0XHRcdC8vIHJlbWVtYmVyIHRoaXMgVVJMIGlmIHRoZSB1c2UgZWxlbWVudCB3YXMgbm90IGVtcHR5IGFuZCBubyByZXF1ZXN0IHdhcyBzZW50XG5cdFx0XHRcdFx0XHRcdGNhY2hlW2Jhc2VdID0gdHJ1ZTtcblx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoY2FjaGVbYmFzZV0ub25sb2FkKSB7XG5cdFx0XHRcdFx0XHRcdC8vIGlmIGl0IHR1cm5zIG91dCB0aGF0IHByZXBlbmRpbmcgdGhlIFNWRyBpcyBub3QgbmVjZXNzYXJ5LFxuXHRcdFx0XHRcdFx0XHQvLyBhYm9ydCB0aGUgaW4tcHJvZ3Jlc3MgeGhyLlxuXHRcdFx0XHRcdFx0XHRjYWNoZVtiYXNlXS5hYm9ydCgpO1xuXHRcdFx0XHRcdFx0XHRkZWxldGUgY2FjaGVbYmFzZV0ub25sb2FkO1xuXHRcdFx0XHRcdFx0XHRjYWNoZVtiYXNlXSA9IHRydWU7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSBlbHNlIGlmIChiYXNlLmxlbmd0aCAmJiBjYWNoZVtiYXNlXSkge1xuXHRcdFx0XHRcdFx0c2V0VGltZW91dChhdHRyVXBkYXRlRnVuYyh7XG5cdFx0XHRcdFx0XHRcdHVzZUVsOiB1c2VzW2ldLFxuXHRcdFx0XHRcdFx0XHRiYXNlOiBiYXNlLFxuXHRcdFx0XHRcdFx0XHRoYXNoOiBoYXNoLFxuXHRcdFx0XHRcdFx0XHRpc1hsaW5rOiBpc1hsaW5rXG5cdFx0XHRcdFx0XHR9KSwgMCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHR1c2VzID0gXCJcIjtcblx0XHRcdGluUHJvZ3Jlc3NDb3VudCArPSAxO1xuXHRcdFx0b2JzZXJ2ZUlmRG9uZSgpO1xuXHRcdH07XG5cdFx0Ly8gVGhlIGxvYWQgZXZlbnQgZmlyZXMgd2hlbiBhbGwgcmVzb3VyY2VzIGhhdmUgZmluaXNoZWQgbG9hZGluZywgd2hpY2ggYWxsb3dzIGRldGVjdGluZyB3aGV0aGVyIFNWRyB1c2UgZWxlbWVudHMgYXJlIGVtcHR5LlxuXHRcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCBmdW5jdGlvbiB3aW5Mb2FkKCkge1xuXHRcdFx0d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsIHdpbkxvYWQsIGZhbHNlKTsgLy8gdG8gcHJldmVudCBtZW1vcnkgbGVha3Ncblx0XHRcdHRpZCA9IHNldFRpbWVvdXQoY2hlY2tVc2VFbGVtcywgMCk7XG5cdFx0fSwgZmFsc2UpO1xuXHR9XG59KCkpO1xuIl19
